plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'kr.mainstream'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

def queryDslVersion = '5.0.0'

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
//	implementation 'mysql:mysql-connector-java'

	// Apache
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'org.apache.commons:commons-collections4:4.4'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Querydsl
	implementation "com.querydsl:querydsl-core:${queryDslVersion}"
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	annotationProcessor(
			"com.querydsl:querydsl-apt:${queryDslVersion}:jakarta",
			"jakarta.persistence:jakarta.persistence-api:3.1.0",
	)

	// Mail Service
	implementation 'org.springframework.boot:spring-boot-starter-mail'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
	archiveFileName = "${project.name}.jar"
}

build {
	jar.enabled = false
}

ext.profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile
sourceSets {
	main {
		java {
			srcDirs "src/main/java"
		}
		resources {
			srcDirs "src/main/resources-${profile}"
		}
	}
}

bootRun {
	systemProperty "spring.profiles.active", profile
}
